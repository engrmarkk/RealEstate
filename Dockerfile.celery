# === Stage 1: Build stage ===
FROM python:3.10-slim AS builder

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    python3-dev \
    libpq-dev \
    libffi-dev \
    libpango-1.0-0 \
    libharfbuzz0b \
    libpangoft2-1.0-0 \
    libcairo2-dev \
    libgirepository-1.0-1 \
    tzdata \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

COPY . .

# === Stage 2: Runtime stage ===
FROM python:3.10-slim

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app
WORKDIR /app

# Install runtime dependencies for WeasyPrint and Celery
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpango-1.0-0 \
    libharfbuzz0b \
    libpangoft2-1.0-0 \
    libxml2 \
    libxslt1.1 \
    libcairo2 \
    libgdk-pixbuf-2.0-0 \
    libffi8 \
    shared-mime-info \
    libglib2.0-0 \
    libcairo-gobject2 \
    libfontconfig1 \
    libfreetype6 \
    libpng16-16 \
    libjpeg62-turbo \
    libx11-6 \
    libxext6 \
    libxrender1 \
    # Additional dependencies for Celery
    libpq5 \
    wait-for-it \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

# Add a non-root user
ARG DOCKER_USER=appuser
RUN useradd -m $DOCKER_USER

# Copy everything from builder
COPY --from=builder /usr/local /usr/local
COPY --from=builder /app /app
RUN chown -R $DOCKER_USER /app
RUN mkdir -p /app/static/uploads && chown -R $DOCKER_USER:$DOCKER_USER /app/static/uploads

USER $DOCKER_USER

CMD ["celery", "-A", "workers.utils.cel_workers.celery", "worker", "--loglevel=info", "--concurrency=4", "--autoscale=4,2", "-E", "-B"]